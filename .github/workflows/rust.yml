name: Rust

on:
  pull_request:
    # in the PR updates
    types: [synchronize,opened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: '0'
  RUST_VERSION: 1.65.0

jobs:
  mongo:
    name: Mongo
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create mongo Docker container
        uses: DigiPie/mongo-action@v1.0.1
      - name: Fill database
        run: |
          pwd
          ls -la
          cat mongo-setup.js
          mongo --help
          mongo 'mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb&connectTimeoutMS=999999&socketTimeoutMS=999999' \
            < mongo-setup.js        

  build:
    name: Build
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Rust ${{env.RUST_VERSION}}
        run: |
          rustup toolchain add $RUST_VERSION --profile minimal
          rustup default $RUST_VERSION
          rustup component add clippy rustfmt
      - name: Set up cargo cache
        id: cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            target/
          key: "${{ github.workflow }}-${{ runner.os }}-r${{env.RUST_VERSION}}-${{ hashFiles('**/Cargo.lock') }}"
      #- name: Build
      #  run: cargo --locked build

      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run clippy action to produce annotations
        uses: actions-rs/clippy-check@v1
        if: steps.check_permissions.outputs.has-permission
        with:
          args: --all-targets -- -D warnings
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Clippy Report
        continue-on-error: true

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Rust ${{env.RUST_VERSION}}
        run: |
          rustup toolchain add $RUST_VERSION --profile minimal
          rustup default $RUST_VERSION
          rustup component add clippy rustfmt
      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/audit-check@v1
        if: steps.check_permissions.outputs.has-permission
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

#  test:
#    if: always()
#    needs: [build,next]
#  next:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly
#          override: true
#      - name: Run tests
#        run: cargo test
#        env:
#          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
#      - name: rust-grcov
#        uses: actions-rs/grcov@v0.1.5
#      - name: Codecov
#        uses: codecov/codecov-action@v3.1.0
#        with:
#          verbose: true
#          fail_ci_if_error: true
